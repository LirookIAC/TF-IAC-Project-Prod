name: Terraform Apply
on:
  workflow_dispatch:
    inputs:
      RG:
        description: 'The resource group to work with.'
        required: true

jobs:
  plan:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      BACKEND_RESOURCE_GROUP_NAME: ${{ secrets.BACKEND_RESOURCE_GROUP_NAME }}
      BACKEND_STORAGE_ACCOUNT_NAME: ${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME }}
      BACKEND_STORAGE_CONTAINER_NAME: ${{ secrets.BACKEND_STORAGE_CONTAINER_NAME }}

    steps:

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Path Checker
        working-directory: "src/terraform"
        run: |
          if [ ! -d "${{ github.event.inputs.RG }}" ]; then
            echo "Terraform plan file not found. Ensure RG name is correct and RG directory is initialized with all required code."
            exit 1
          fi
      
      - name: Set Plan File Name
        working-directory: "src/terraform"
        run: |
          echo "TF_BACKEND_KEY=${{ github.event.inputs.RG }}.tfplan" >> $GITHUB_ENV

      - name: Terraform Validate
        working-directory: "src/terraform/${{ github.event.inputs.RG }}"
        run: |
          chmod +x ../../../.github/workflows/scripts/terraform-with-backend.sh
          ../../../.github/workflows/scripts/terraform-with-backend.sh validate

      - name: Terraform Plan
        working-directory: "src/terraform/${{ github.event.inputs.RG }}"
        run: |
          chmod +x ../../../.github/workflows/scripts/terraform-with-backend.sh
          ../../../.github/workflows/scripts/terraform-with-backend.sh plan -out="${{ github.event.inputs.RG }}.tfplan"


      - name: Upload Terraform Plan as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ github.event.inputs.RG }}.tfplan"
          path: "src/terraform/${{ github.event.inputs.RG }}"

  apply:
    needs: plan
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      BACKEND_RESOURCE_GROUP_NAME: ${{ secrets.BACKEND_RESOURCE_GROUP_NAME }}
      BACKEND_STORAGE_ACCOUNT_NAME: ${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME }}
      BACKEND_STORAGE_CONTAINER_NAME: ${{ secrets.BACKEND_STORAGE_CONTAINER_NAME }}
    steps:
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Plan File Name
        working-directory: "src/terraform"
        run: |
          echo "TF_BACKEND_KEY=${{ github.event.inputs.RG }}.tfplan" >> $GITHUB_ENV

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: "${{ github.event.inputs.RG }}.tfplan"
          path: "src/terraform/${{ github.event.inputs.RG }}"

      - name: Terraform Validate
        working-directory: "src/terraform/${{ github.event.inputs.RG }}"
        run: |
          chmod +x ../../../.github/workflows/scripts/terraform-with-backend.sh
          ../../../.github/workflows/scripts/terraform-with-backend.sh validate

      - name: Terraform Apply
        working-directory: "src/terraform/${{ github.event.inputs.RG }}"
        run: |
          chmod +x ../../../.github/workflows/scripts/terraform-with-backend.sh
          ../../../.github/workflows/scripts/terraform-with-backend.sh apply -auto-approve "${{ github.event.inputs.RG }}.tfplan"

